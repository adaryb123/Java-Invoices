/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import java.awt.CardLayout;
import java.awt.Font;
import java.util.ArrayList;
import java.util.Iterator;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;
import model.SerializationManager;
import model.Customer;
import model.Item;

/**
 *
 * @author uzivatel
 */
public class MainScreen extends javax.swing.JFrame {

    ArrayList<Customer> customers;
    ArrayList<Item> items;
    
    /**
     * Creates new form mainScreen
     */
    public MainScreen() {
        initComponents();
        customers = SerializationManager.loadCustomers();
        items = SerializationManager.loadItems();
        
        refreshCustomerTable();
        refreshItemTable();
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        itemButton = new javax.swing.JButton();
        customerButton = new javax.swing.JButton();
        mainPanel = new javax.swing.JPanel();
        itemPanel = new javax.swing.JPanel();
        editSelectedButtonItem = new javax.swing.JButton();
        refreshButtonItem = new javax.swing.JButton();
        addNewButtonItem = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        itemTable = new javax.swing.JTable();
        customerPanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        customerTable = new javax.swing.JTable();
        addNewButtonCustomer = new javax.swing.JButton();
        refreshButtonCustomer = new javax.swing.JButton();
        editSelectedButtonCustomer = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        itemButton.setBackground(new java.awt.Color(255, 255, 255));
        itemButton.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        itemButton.setForeground(new java.awt.Color(0, 0, 0));
        itemButton.setText("Item");
        itemButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemButtonActionPerformed(evt);
            }
        });
        getContentPane().add(itemButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 110, 120, 60));

        customerButton.setBackground(new java.awt.Color(255, 255, 255));
        customerButton.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        customerButton.setForeground(new java.awt.Color(0, 0, 0));
        customerButton.setText("Customer");
        customerButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                customerButtonActionPerformed(evt);
            }
        });
        getContentPane().add(customerButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 20, 120, 60));

        mainPanel.setBackground(new java.awt.Color(255, 255, 255));
        mainPanel.setForeground(new java.awt.Color(0, 0, 0));
        mainPanel.setLayout(new java.awt.CardLayout());

        itemPanel.setBackground(new java.awt.Color(255, 255, 255));
        itemPanel.setForeground(new java.awt.Color(0, 0, 0));
        itemPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        editSelectedButtonItem.setBackground(new java.awt.Color(255, 255, 255));
        editSelectedButtonItem.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        editSelectedButtonItem.setForeground(new java.awt.Color(0, 0, 0));
        editSelectedButtonItem.setText("Edit Selected");
        editSelectedButtonItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editSelectedButtonItemActionPerformed(evt);
            }
        });
        itemPanel.add(editSelectedButtonItem, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 430, 180, 60));

        refreshButtonItem.setBackground(new java.awt.Color(255, 255, 255));
        refreshButtonItem.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        refreshButtonItem.setForeground(new java.awt.Color(0, 0, 0));
        refreshButtonItem.setText("Refresh");
        refreshButtonItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshButtonItemActionPerformed(evt);
            }
        });
        itemPanel.add(refreshButtonItem, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 430, 130, 60));

        addNewButtonItem.setBackground(new java.awt.Color(255, 255, 255));
        addNewButtonItem.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        addNewButtonItem.setForeground(new java.awt.Color(0, 0, 0));
        addNewButtonItem.setText("Add New");
        addNewButtonItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addNewButtonItemActionPerformed(evt);
            }
        });
        itemPanel.add(addNewButtonItem, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 430, 130, 60));

        itemTable.setBackground(new java.awt.Color(255, 255, 255));
        itemTable.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        itemTable.setForeground(new java.awt.Color(0, 0, 0));
        itemTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        itemTable.setRowHeight(35);
        jScrollPane2.setViewportView(itemTable);
        JTableHeader itemTableHeader = itemTable.getTableHeader();
        Font headerFont = new Font("Verdana", Font.PLAIN, 24);
        itemTableHeader.setFont(headerFont);

        itemPanel.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, 810, 370));

        mainPanel.add(itemPanel, "itemPanel");

        customerPanel.setBackground(new java.awt.Color(255, 255, 255));
        customerPanel.setForeground(new java.awt.Color(0, 0, 0));
        customerPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        customerTable.setBackground(new java.awt.Color(255, 255, 255));
        customerTable.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        customerTable.setForeground(new java.awt.Color(0, 0, 0));
        customerTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        customerTable.setRowHeight(35);
        jScrollPane1.setViewportView(customerTable);
        JTableHeader tableHeader = customerTable.getTableHeader();
        Font headerFont = new Font("Verdana", Font.PLAIN, 24);
        tableHeader.setFont(headerFont);

        customerPanel.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, 810, 370));

        addNewButtonCustomer.setBackground(new java.awt.Color(255, 255, 255));
        addNewButtonCustomer.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        addNewButtonCustomer.setForeground(new java.awt.Color(0, 0, 0));
        addNewButtonCustomer.setText("Add New");
        addNewButtonCustomer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addNewButtonCustomerActionPerformed(evt);
            }
        });
        customerPanel.add(addNewButtonCustomer, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 430, 130, 60));

        refreshButtonCustomer.setBackground(new java.awt.Color(255, 255, 255));
        refreshButtonCustomer.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        refreshButtonCustomer.setForeground(new java.awt.Color(0, 0, 0));
        refreshButtonCustomer.setText("Refresh");
        refreshButtonCustomer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshButtonCustomerActionPerformed(evt);
            }
        });
        customerPanel.add(refreshButtonCustomer, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 440, 130, 60));

        editSelectedButtonCustomer.setBackground(new java.awt.Color(255, 255, 255));
        editSelectedButtonCustomer.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        editSelectedButtonCustomer.setForeground(new java.awt.Color(0, 0, 0));
        editSelectedButtonCustomer.setText("Edit Selected");
        editSelectedButtonCustomer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editSelectedButtonCustomerActionPerformed(evt);
            }
        });
        customerPanel.add(editSelectedButtonCustomer, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 430, 180, 60));

        mainPanel.add(customerPanel, "userPanel");

        getContentPane().add(mainPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 0, 840, 630));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void itemButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemButtonActionPerformed
        // TODO add your handling code here:
        CardLayout card = (CardLayout)mainPanel.getLayout();
        card.show(mainPanel, "itemPanel");
    }//GEN-LAST:event_itemButtonActionPerformed

    private void customerButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_customerButtonActionPerformed
        // TODO add your handling code here:                                         
        CardLayout card = (CardLayout)mainPanel.getLayout();
        card.show(mainPanel, "userPanel"); 
    }//GEN-LAST:event_customerButtonActionPerformed

    private void addNewButtonCustomerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addNewButtonCustomerActionPerformed
        // TODO add your handling code here:
        new CustomerInfoScreen().setVisible(true);
    }//GEN-LAST:event_addNewButtonCustomerActionPerformed

    private void refreshButtonCustomerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshButtonCustomerActionPerformed
        // TODO add your handling code here:
        customers = SerializationManager.loadCustomers();
        refreshCustomerTable();
    }//GEN-LAST:event_refreshButtonCustomerActionPerformed

    private void editSelectedButtonCustomerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editSelectedButtonCustomerActionPerformed
        // TODO add your handling code here:
        int selectedRow = customerTable.getSelectedRow();
        String name = customerTable.getModel().getValueAt(selectedRow, 0).toString();
        String address = customerTable.getModel().getValueAt(selectedRow, 1).toString();
        String city = customerTable.getModel().getValueAt(selectedRow, 2).toString();
        String postcode = customerTable.getModel().getValueAt(selectedRow, 3).toString();
        SerializationManager.deleteCustomer(new Customer(name,address,city,postcode));
        
        CustomerInfoScreen newScreen = new CustomerInfoScreen();
        newScreen.initializeEditMode(name, address, city, postcode);
        newScreen.setVisible(true);
    }//GEN-LAST:event_editSelectedButtonCustomerActionPerformed

    private void editSelectedButtonItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editSelectedButtonItemActionPerformed
        // TODO add your handling code here:
        int selectedRow = itemTable.getSelectedRow();
        String name = itemTable.getModel().getValueAt(selectedRow, 0).toString();
        String description = itemTable.getModel().getValueAt(selectedRow, 1).toString();
        String priceAsString = itemTable.getModel().getValueAt(selectedRow, 2).toString();
        double price = Double.parseDouble(priceAsString);
        SerializationManager.deleteItem(new Item(name,description,price));
        
        ItemInfoScreen newScreen = new ItemInfoScreen();
        newScreen.initializeEditMode(name,description,priceAsString);
        newScreen.setVisible(true);
    }//GEN-LAST:event_editSelectedButtonItemActionPerformed

    private void refreshButtonItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshButtonItemActionPerformed
        // TODO add your handling code here:
         items = SerializationManager.loadItems();
         refreshItemTable();
    }//GEN-LAST:event_refreshButtonItemActionPerformed

    private void addNewButtonItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addNewButtonItemActionPerformed
        // TODO add your handling code here:
          new ItemInfoScreen().setVisible(true);
    }//GEN-LAST:event_addNewButtonItemActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainScreen().setVisible(true);
            }
        });
    }
    
    private void refreshCustomerTable()
    {
        ArrayList<String> columns = new ArrayList<String>();
        ArrayList<String[]> values = new ArrayList<String[]>();
        
        columns.add("Name");
        columns.add("Address");
        columns.add("City");
        columns.add("Postcode");
        
        customers.forEach(i -> {
            values.add(new String[] {i.getName(),i.getAddress(),i.getCity(),i.getPostcode()});
        });
        
        customerTable.setModel(new DefaultTableModel(values.toArray(new Object[][] {}), columns.toArray()));
 
    }
    
    private void refreshItemTable()
    {
        ArrayList<String> columns = new ArrayList<String>();
        ArrayList<String[]> values = new ArrayList<String[]>();
        
        columns.add("Name");
        columns.add("Description");
        columns.add("Price");
        
        items.forEach(i -> {
            values.add(new String[] {i.getName(),i.getDescription(),String.valueOf(i.getPrice())});
        });
        
        itemTable.setModel(new DefaultTableModel(values.toArray(new Object[][] {}), columns.toArray()));
 
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addNewButtonCustomer;
    private javax.swing.JButton addNewButtonItem;
    private javax.swing.JButton customerButton;
    private javax.swing.JPanel customerPanel;
    private javax.swing.JTable customerTable;
    private javax.swing.JButton editSelectedButtonCustomer;
    private javax.swing.JButton editSelectedButtonItem;
    private javax.swing.JButton itemButton;
    private javax.swing.JPanel itemPanel;
    private javax.swing.JTable itemTable;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JButton refreshButtonCustomer;
    private javax.swing.JButton refreshButtonItem;
    // End of variables declaration//GEN-END:variables
}